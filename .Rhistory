#################################### Plot Data ####################################
data %>%
ggplot(aes(x = date, y = value))+
geom_line()+
scale_x_date('Year')
library(rnoaa)
library(lawn)
library(tidyverse)
library(leaflet)
library(tsibble)
library(lubridate)
library(magrittr)
library(fable)
if (!'fable' %in% installed.packages())
devtools::install_github("tidyverts/fable")
library(fable)
library(rnoaa)
library(lawn)
library(tidyverse)
library(leaflet)
library(tsibble)
library(lubridate)
library(magrittr)
#################################### Plot Data ####################################
data %>%
ggplot(aes(x = date, y = value))+
geom_line()+
scale_x_date('Year')
library(rnoaa)
library(lawn)
library(tidyverse)
library(leaflet)
library(tsibble)
library(lubridate)
library(magrittr)
R.version()
R.version
library(rnoaa)
library(lawn)
library(tidyverse)
library(leaflet)
library(tsibble)
library(lubridate)
library(magrittr)
install.packages("rnoa",'lawn','tidyverse','leaflet','tsibble','lubridate','magrittr')
install.packages("rnoaa",'lawn','tidyverse','leaflet','tsibble','lubridate','magrittr')
install.packages('rnoaa')
install.packages('lawn')
install.packages('tidyverse')
library(rnoaa)
library(lawn)
library(tidyverse)
library(leaflet)
library(tsibble)
library(lubridate)
library(magrittr)
data
#################################### Plot Data ####################################
data %>%
ggplot(aes(x = date, y = value))+
geom_line()+
scale_x_date('Year')
#################################### Plot Data ####################################
data %>%
ggplot(aes(x = as.date(date), y = value))+
geom_line()+
scale_x_date('Year')
help(as.date)
??as.Date
#################################### Plot Data ####################################
data %>%
ggplot(aes(x = as_date(date), y = value))+
geom_line()+
scale_x_date('Year')
#################################### Plot Data ####################################
data %>%
ggplot(aes(x = as_date(date), y = value))+
geom_line()+
scale_x_date('Year')+
scale_y_continuous('Monthly Precipitation')
#################################### Plot Data ####################################
data %>%
ggplot(aes(x = as_date(date), y = value))+
geom_line()+
scale_x_date('Year')+
scale_y_continuous('Monthly Precipitation')+
geom_smooth()
data
#################################### Plot Data ####################################
data %>%
ggplot(aes(x = as_date(date), y = value))+
geom_line()+
scale_x_date('Year')+
scale_y_continuous('Monthly Precipitation')+
geom_smooth()
library(rnoaa)
library(lawn)
library(tidyverse)
library(leaflet)
library(tsibble)
library(lubridate)
library(magrittr)
#################################### Plot Data ####################################
data %>%
ggplot(aes(x = as_date(date), y = value))+
geom_line()+
scale_x_date('Year')+
scale_y_continuous('Monthly Precipitation')+
geom_smooth()
#################################### Plot Data ####################################
data %>%
ggplot(aes(x = as_date(date), y = value))+
geom_line()+
scale_x_date('Year')+
scale_y_continuous('Monthly Precipitation')+
# geom_smooth()
#################################### Plot Data ####################################
data %>%
ggplot(aes(x = as_date(date), y = value))+
geom_line()+
scale_x_date('Year')+
scale_y_continuous('Monthly Precipitation')
# geom_smooth()
#################################### Plot Data ####################################
data %>%
ggplot(aes(x = as_date(date), y = value))+
geom_line()+
scale_x_date('Year')+
scale_y_continuous('Monthly Precipitation')
# geom_smooth()
#################################### Plot Data ####################################
data %>%
ggplot(aes(x = as_date(date), y = value))+
geom_line()+
scale_x_date('Year')+
scale_y_continuous('Monthly Precipitation')+
theme_light()
# geom_smooth()
?bcp
install.packages('bcp')
library(bcp)
?bcp
set.seed(5)
x <- rep(c(0,1), each=50)
y <- x + rnorm(50, sd=1)
bcp.1b <- bcp(y)
plot(bcp.1b, main="Univariate Change Point Example")
##
plot(x)
plot(x,y)
plot(y)
#################################### Plot Data ####################################
data %>%
ggplot(aes(x = as_date(date), y = value))+
geom_line()+
scale_x_date('Year')+
scale_y_continuous('Monthly Precipitation')+
theme_light()
plot(bcp.1b, main="Univariate Change Point Example")
plot.bcp(bcp.1b)
summary(bcp.1b)
set.seed(5)
x <- c(rnorm(50), rnorm(50, 5, 1), rnorm(50))
bcp.1a <- bcp(x)
plot(bcp.1a, main="Univariate Change Point Example")
legacyplot(bcp.1a)
legacyplot(bcp.1b)
20/2
d <- (99, 90.1, 80.9, 91.1, 81.4, 93.6, 102.3, 81.2)
d <- c(99, 90.1, 80.9, 91.1, 81.4, 93.6, 102.3, 81.2)
d
mean(d)
sd(d)
sd(d)/sqrt(8)
sd(d)/sqrt(8)*2.306
sqrt((sd(d))*2.929712)*2.306
10*3.182
sd(d)/sqrt(8)*2.998
sqrt((sd(d))*2.929712)*2.998
d
2.929*2.365
sqrt((sd(d))*2.929712)*2.365
sqrt((sd(d))+2.929712)*2.365
2.635*sd(d)*sqrt(1+(1/8))
2.365*sqrt((8.3^2)+(2.9^2))
#################################### SECTION TITLE ####################################
library(rnoaa)
library(lawn)
library(tidyverse)
library(leaflet)
library(tsibble)
library(lubridate)
library(magrittr)
library(bcp)
#library(patchwork)
if (!'fable' %in% installed.packages())
devtools::install_github("tidyverts/fable")
library(fable)
upprRghtLng = c(-118)
lwrLftLat = c(46.0212)
lwrLftLng = c(-122.9229)
upprRghtLat = c(47)
lawn_bbox_polygon(c(lwrLftLng,lwrLftLat,upprRghtLng,upprRghtLat)) %>% view
lawn_bbox_polygon(c(lwrLftLng,lwrLftLat,upprRghtLng,upprRghtLat)) %>% view
lawn_bbox_polygon(c(lwrLftLng,lwrLftLat,upprRghtLng,upprRghtLat)) %>% view
upprRghtLng = c(-118)
lwrLftLat = c(46.0212)
lwrLftLng = c(-122.9229)
upprRghtLat = c(47)
lawn_bbox_polygon(c(lwrLftLng,lwrLftLat,upprRghtLng,upprRghtLat)) %>% view
#################################### SECTION TITLE ####################################
options(noaakey = "rASqqaPrrrguOyLcLmNEiAANglHrkllQ")
stations <- ncdc_stations(extent = c(lwrLftLat, lwrLftLng,upprRghtLat, upprRghtLng),
limit = 500)
stations <- stations$data
library(lubridate)
library(leaflet)
stations %>%
filter(mindate < as.Date("1970-01-01") & maxdate > as.Date("1990-01-01")) -> substations
leaflet() %>%
addProviderTiles(providers$OpenTopoMap) %>%
addMarkers(lng = substations$longitude,
lat = substations$latitude,
label = substations$id,
options = popupOptions(closeButton = FALSE))
rm(stations)
View(substations)
station_name = 'GHCND:USC00456262'
lat = substations$latitude[substations$id == 'station_name']
substations$id == station_name
substations$latitude[substations$id == station_name]
long = substations$longitude[
long = substations$longitude[substations$id == station_name]
#################################### Download monthly precip data ####################################
station_name = 'COOP:451457'
lat = substations$latitude[substations$id == station_name]
long = substations$longitude[substations$id == station_name]
dataset = 'GHCND'
startdate = c(1970)
enddate = c(1990)
# a <- ncdc_datasets(stationid   = station_name, limit = 50)
a = 1
precipData <- list()
for (i in startdate:enddate) {
print(i)
rm(out)
strtD <- paste(i,'01','01',sep = '-')
endD <- paste(i + 1, '01','01',sep = '-')
#main call to get data
out = ncdc(datasetid = dataset,stationid = station_name,
startdate = strtD,
enddate = endD,
limit = 365,
datatypeid = 'PRCP')
out <-  out$data
out$date <- ymd_hms(out$date)
precipData[[a]] <- out
a = a + 1
}
allData <- plyr::ldply(precipData,data.frame)
# check thta it worked
allData %>%
ggplot(aes(x = date, y = value))+
geom_line()
View(out)
out = ncdc(datasetid = dataset,stationid = station_name,
startdate = strtD,
enddate = endD,
limit = 365,
datatypeid = 'PRCP')
ncdc(stationid = station_name)
ncdc(stationid = station_name,
startdate = strtD,
enddate = endD)
ghcnd(stationid = station_name)
ncdc_datasets(stationid = station_name)
a <- ncdc_datasets(stationid = station_name)
a$data
out = ncdc(datasetid = dataset,stationid = station_name,
startdate = strtD,
enddate = endD,
limit = 365,
datatypeid = 'PRECIP_HLY')
ncdc_datasets(stationid = 'GHCND:USC00451690')
dataset = 'PRECIP_HLY'
out = ncdc(datasetid = dataset,stationid = station_name,
startdate = strtD,
enddate = endD,
limit = 365
)
OUT
out
out <-  out$data
out$date <- ymd_hms(out$date)
View(out)
out %>%
ggplot(aes(x = date, y = value))+
geom_line()
#################################### SECTION TITLE ####################################
options(noaakey = "rASqqaPrrrguOyLcLmNEiAANglHrkllQ")
stations <- ncdc_stations(extent = c(lwrLftLat, lwrLftLng,upprRghtLat, upprRghtLng),
limit = 500)
stations <- stations$data
library(lubridate)
library(leaflet)
stations %>%
filter(mindate < as.Date("1970-01-01") & maxdate > as.Date("1990-01-01")) -> substations
leaflet() %>%
addProviderTiles(providers$OpenTopoMap) %>%
addMarkers(lng = substations$longitude,
lat = substations$latitude,
label = substations$id,
options = popupOptions(closeButton = FALSE))
rm(stations)
?duplicated
duplicated(substations$longitude)
?contains
?grepl
stations %>%
filter(mindate < as.Date("1970-01-01") & maxdate > as.Date("1990-01-01")) %>%
filter(!grepl('GHCND',id)
stations %>%
filter(mindate < as.Date("1970-01-01") & maxdate > as.Date("1990-01-01")) %>%
filter(!grepl('GHCND',id))
#################################### SECTION TITLE ####################################
options(noaakey = "rASqqaPrrrguOyLcLmNEiAANglHrkllQ")
stations <- ncdc_stations(extent = c(lwrLftLat, lwrLftLng,upprRghtLat, upprRghtLng),
limit = 500)
stations <- stations$data
library(lubridate)
library(leaflet)
stations %>%
filter(mindate < as.Date("1970-01-01") & maxdate > as.Date("1990-01-01")) %>%
filter(!grepl('GHCND',id))-> substations
leaflet() %>%
addProviderTiles(providers$OpenTopoMap) %>%
addMarkers(lng = substations$longitude,
lat = substations$latitude,
label = substations$id,
options = popupOptions(closeButton = FALSE))
rm(stations)
#################################### SECTION TITLE ####################################
options(noaakey = "rASqqaPrrrguOyLcLmNEiAANglHrkllQ")
stations <- ncdc_stations(extent = c(lwrLftLat, lwrLftLng,upprRghtLat, upprRghtLng),
limit = 500)
stations <- stations$data
library(lubridate)
library(leaflet)
stations %>%
filter(mindate < as.Date("1970-01-01") & maxdate > as.Date("1990-01-01")) %>%
filter(grepl('GHCND',id))-> substations
leaflet() %>%
addProviderTiles(providers$OpenTopoMap) %>%
addMarkers(lng = substations$longitude,
lat = substations$latitude,
label = substations$id,
options = popupOptions(closeButton = FALSE))
rm(stations)
#################################### Download monthly precip data ####################################
station_name = 'GHCND:USC00456747'
lat = substations$latitude[substations$id == station_name]
long = substations$longitude[substations$id == station_name]
dataset = 'GHCND'
startdate = c(1970)
enddate = c(1990)
# a <- ncdc_datasets(stationid   = station_name, limit = 50)
a = 1
precipData <- list()
for (i in startdate:enddate) {
print(i)
rm(out)
strtD <- paste(i,'01','01',sep = '-')
endD <- paste(i + 1, '01','01',sep = '-')
#main call to get data
out = ncdc(datasetid = dataset,stationid = station_name,
startdate = strtD,
enddate = endD,
limit = 365,
datatypeid = 'PRCP')
out <-  out$data
out$date <- ymd_hms(out$date)
precipData[[a]] <- out
a = a + 1
}
out = ncdc(datasetid = dataset,stationid = station_name,
startdate = strtD,
enddate = endD,
limit = 365,
datatypeid = 'PRCP')
out$data
#################################### Download monthly precip data ####################################
station_name = 'GHCND:USC00456747'
lat = substations$latitude[substations$id == station_name]
long = substations$longitude[substations$id == station_name]
dataset = 'GHCND'
startdate = c(1970)
enddate = c(1990)
# a <- ncdc_datasets(stationid   = station_name, limit = 50)
a = 1
precipData <- list()
for (i in startdate:enddate) {
print(i)
rm(out)
strtD <- paste(i,'01','01',sep = '-')
endD <- paste(i + 1, '01','01',sep = '-')
#main call to get data
out = ncdc(datasetid = dataset,stationid = station_name,
startdate = strtD,
enddate = endD,
limit = 365,
datatypeid = 'PRCP')
out <-  out$data
out$date <- ymd_hms(out$date)
precipData[[a]] <- out
a = a + 1
}
#################################### Download monthly precip data ####################################
station_name = 'GHCND:USC00456747'
lat = substations$latitude[substations$id == station_name]
long = substations$longitude[substations$id == station_name]
dataset = 'GHCND'
startdate = c(1970)
enddate = c(1990)
# a <- ncdc_datasets(stationid   = station_name, limit = 50)
a = 1
precipData <- list()
for (i in startdate:enddate) {
print(i)
rm(out)
strtD <- paste(i,'01','01',sep = '-')
endD <- paste(i + 1, '01','01',sep = '-')
#main call to get data
out = ncdc(datasetid = dataset,stationid = station_name,
startdate = strtD,
enddate = endD,
limit = 365,
datatypeid = 'PRCP')
out <-  out$data
out$date <- ymd_hms(out$date)
precipData[[a]] <- out
a = a + 1
}
allData <- plyr::ldply(precipData,data.frame)
# check thta it worked
allData %>%
ggplot(aes(x = date, y = value))+
geom_line()
allData %>%
ggplot(aes(x = date, y = value))+
geom_line()+
xlim(0, 600)
allData %>%
ggplot(aes(x = date, y = value))+
geom_line()+
ylim(0, 600)
#################################### SECTION TITLE ####################################
library(tidyverse)
library(stringr)
library(textclean)
library(lubridate)
library(rvest)
library(ggalt)
setwd('/Users/matthew/Documents/GitHub/endangered_species')
rm(list = ls())
#################################### SECTION TITLE ####################################
url <- "https://ballotpedia.org/Delisted_species#cite_note-delisted-2"
website <- read_html(url)
tbls_ls <- website %>%
html_nodes("table") %>%
.[1:3] %>%
html_table(fill = TRUE)
esaData <- tbls_ls[[3]]
rm(url,tbls_ls,website)
colnames(esaData) <- as.character(unlist(esaData[1,]))
esaData <- esaData[-1,]
esaData <- esaData[-nrow(esaData),]
esaData$`Date species first listed` <- mdy(esaData$`Date species first listed`)
esaData$`Date delisted` <-  mdy(esaData$`Date delisted`)
esaData %>%
mutate(name =  gsub("\\(.*","",`Species name (scientific name)`)) -> esaData
a <- data.frame(do.call('rbind',(strsplit(esaData$name,','))))
esaData$name <- paste(a$X2,a$X1,sep = ' ')
esaData %>%
filter(.,`Reason for delisting` == 'Extinct' |
`Reason for delisting` == 'Recovered') -> trueESA
rm(a)
trueESA %>%
mutate(dura = trueESA$`Date delisted`-trueESA$`Date species first listed`) ->trueESA
View(trueESA)
trueESA %>% group_by(`Reason for delisting`) %>% summary()
trueESA %>% group_by(`Reason for delisting`) %>% summarise()
trueESA %>% group_by(`Reason for delisting`) %>% summarise()
trueESA %>% group_by(`Reason for delisting`) %>% summarise(n())
#################################### SECTION TITLE ####################################
trueESA %>%
ggplot(aes(x = `Date species first listed`,
y = `Date delisted`,
color = `Reason for delisting`))+
geom_point()
#################################### SECTION TITLE ####################################
trueESA %>%
ggplot(aes(x = `Date species first listed`,
y = dura,
color = `Reason for delisting`))+
geom_point()
#################################### SECTION TITLE ####################################
trueESA %>%
ggplot(aes(x = `Date species first listed`,
y = dura,
color = `Reason for delisting`))+
geom_smooth()+
geom_point()
